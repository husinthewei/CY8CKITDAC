C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFLASH
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\CyFlash.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\CyFlash.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\
                    -DP8051_Keil_951\Debug/CyFlash.lst) CD OT(0,SPEED) OJ(.\DP8051_Keil_951\Debug\CyFlash.obj)

line level    source

   1          /***************************************************************************//**
   2          * \file CyFlash.c
   3          * \version 5.50
   4          *
   5          * \brief Provides an API for the FLASH/EEPROM.
   6          *
   7          * \note This code is endian agnostic.
   8          *
   9          * \note Documentation of the API's in this file is located in the System
  10          * Reference Guide provided with PSoC Creator.
  11          *
  12          ********************************************************************************
  13          * \copyright
  14          * Copyright 2008-2016, Cypress Semiconductor Corporation. All rights reserved.
  15          * You may use this file only in accordance with the license, terms, conditions,
  16          * disclaimers, and limitations in the end user license agreement accompanying
  17          * the software package with which this file was provided.
  18          *******************************************************************************/
  19          
  20          #include "CyFlash.h"
  21          
  22          /*  The number of EEPROM arrays */
  23          #define CY_FLASH_EEPROM_NUMBER_ARRAYS                 (1u)
  24          
  25          
  26          /*******************************************************************************
  27          * Holds the die temperature, updated by CySetTemp(). Used for flash writing.
  28          * The first byte is the sign of the temperature (0 = negative, 1 = positive).
  29          * The second byte is the magnitude.
  30          *******************************************************************************/
  31          uint8 dieTemperature[CY_FLASH_DIE_TEMP_DATA_SIZE];
  32          
  33          #if(CYDEV_ECC_ENABLE == 0)
  34              static uint8 * rowBuffer = 0;
  35          #endif  /* (CYDEV_ECC_ENABLE == 0) */
  36          
  37          
  38          static cystatus CySetTempInt(void);
  39          static cystatus CyFlashGetSpcAlgorithm(void);
  40          
  41          
  42          /*******************************************************************************
  43          * Function Name: CyFlash_Start
  44          ****************************************************************************//**
  45          *
  46          *  Enable the Flash.
  47          *
  48          *******************************************************************************/
  49          void CyFlash_Start(void) 
  50          {
  51   1          uint8 interruptState;
  52   1      
  53   1          interruptState = CyEnterCriticalSection();
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 2   

  54   1      
  55   1      
  56   1          /***************************************************************************
  57   1          * Enable SPC clock. This also internally enables the 36MHz IMO, since this
  58   1          * is required for the SPC to function.
  59   1          ***************************************************************************/
  60   1          CY_FLASH_PM_ACT_CFG0_REG    |= CY_FLASH_PM_ACT_CFG0_EN_CLK_SPC;
  61   1          CY_FLASH_PM_ALTACT_CFG0_REG |= CY_FLASH_PM_ALTACT_CFG0_EN_CLK_SPC;
  62   1      
  63   1      
  64   1          /***************************************************************************
  65   1          * The wake count defines the number of Bus Clock cycles it takes for the
  66   1          * flash or eeprom to wake up from a low power mode independent of the chip
  67   1          * power mode. Wake up time for these blocks is 5 us.
  68   1          * The granularity of this register is 2 Bus Clock cycles, so a value of 0x1E
  69   1          * (30d) defines the wake up time as 60 cycles of the Bus Clock.
  70   1          * This register needs to be written with a value dependent on the Bus Clock
  71   1          * frequency so that the duration of the cycles is equal to or greater than
  72   1          * the 5 us delay required.
  73   1          ***************************************************************************/
  74   1          CY_FLASH_SPC_FM_EE_WAKE_CNT_REG = CY_FLASH_SPC_FM_EE_WAKE_CNT_80MHZ;
  75   1      
  76   1      
  77   1          /***************************************************************************
  78   1          * Enable flash. Active flash macros consume current, but re-enabling a
  79   1          * disabled flash macro takes 5us. If the CPU attempts to fetch out of the
  80   1          * macro during that time, it will be stalled. This bit allows the flash to
  81   1          * be enabled even if the CPU is disabled, which allows a quicker return to
  82   1          * code execution.
  83   1          ***************************************************************************/
  84   1          CY_FLASH_PM_ACT_CFG12_REG    |= CY_FLASH_PM_ACT_CFG12_EN_FM;
  85   1          CY_FLASH_PM_ALTACT_CFG12_REG |= CY_FLASH_PM_ALTACT_CFG12_EN_FM;
  86   1      
  87   1          while(0u == (CY_FLASH_SPC_FM_EE_CR_REG & CY_FLASH_EE_EE_AWAKE))
  88   1          {
  89   2              /* Non-zero status denotes that the EEPROM/Flash is awake & powered. */
  90   2          }
  91   1      
  92   1          CyExitCriticalSection(interruptState);
  93   1      }
  94          
  95          
  96          /*******************************************************************************
  97          * Function Name: CyFlash_Stop
  98          ****************************************************************************//**
  99          *
 100          *  Disable the Flash.
 101          *
 102          * \sideeffect
 103          *  This setting is ignored as long as the CPU is currently running.  This will
 104          *  only take effect when the CPU is later disabled.
 105          *
 106          *******************************************************************************/
 107          void CyFlash_Stop(void) 
 108          {
 109   1          uint8 interruptState;
 110   1      
 111   1          interruptState = CyEnterCriticalSection();
 112   1      
 113   1          CY_FLASH_PM_ACT_CFG12_REG    &= ((uint8)(~CY_FLASH_PM_ACT_CFG12_EN_FM));
 114   1          CY_FLASH_PM_ALTACT_CFG12_REG &= ((uint8)(~CY_FLASH_PM_ALTACT_CFG12_EN_FM));
 115   1      
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 3   

 116   1          CyExitCriticalSection(interruptState);
 117   1      }
 118          
 119          
 120          /*******************************************************************************
 121          * Function Name: CySetTempInt
 122          ****************************************************************************//**
 123          *
 124          *  Sends a command to the SPC to read the die temperature. Sets a global value
 125          *  used by the Write function. This function must be called once before
 126          *  executing a series of Flash writing functions.
 127          *
 128          * \return
 129          *  status:
 130          *   CYRET_SUCCESS - if successful
 131          *   CYRET_LOCKED  - if Flash writing already in use
 132          *   CYRET_UNKNOWN - if there was an SPC error
 133          *
 134          *******************************************************************************/
 135          static cystatus CySetTempInt(void) 
 136          {
 137   1          cystatus status;
 138   1      
 139   1          /* Make sure SPC is powered */
 140   1          CySpcStart();
 141   1      
 142   1          /* Plan for failure. */
 143   1          status = CYRET_UNKNOWN;
 144   1      
 145   1          if(CySpcLock() == CYRET_SUCCESS)
 146   1          {
 147   2              /* Write the command. */
 148   2              if(CYRET_STARTED == CySpcGetTemp(CY_TEMP_NUMBER_OF_SAMPLES))
 149   2              {
 150   3                  do
 151   3                  {
 152   4                      if(CySpcReadData(dieTemperature, CY_FLASH_DIE_TEMP_DATA_SIZE) == CY_FLASH_DIE_TEMP_DATA_SI
             -ZE)
 153   4                      {
 154   5                          status = CYRET_SUCCESS;
 155   5      
 156   5                          while(CY_SPC_BUSY)
 157   5                          {
 158   6                              /* Spin until idle. */
 159   6                              CyDelayUs(1u);
 160   6                          }
 161   5                          break;
 162   5                      }
 163   4      
 164   4                  } while(CY_SPC_BUSY);
 165   3              }
 166   2      
 167   2              CySpcUnlock();
 168   2          }
 169   1          else
 170   1          {
 171   2              status = CYRET_LOCKED;
 172   2          }
 173   1      
 174   1          return (status);
 175   1      }
 176          
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 4   

 177          
 178          /*******************************************************************************
 179          * Function Name: CyFlashGetSpcAlgorithm
 180          ****************************************************************************//**
 181          *
 182          *  Sends a command to the SPC to download code into RAM.
 183          *
 184          * \return
 185          *  status:
 186          *   CYRET_SUCCESS - if successful
 187          *   CYRET_LOCKED  - if Flash writing already in use
 188          *   CYRET_UNKNOWN - if there was an SPC error
 189          *
 190          *******************************************************************************/
 191          static cystatus CyFlashGetSpcAlgorithm(void) 
 192          {
 193   1          cystatus status;
 194   1      
 195   1          /* Make sure SPC is powered */
 196   1          CySpcStart();
 197   1      
 198   1          if(CySpcLock() == CYRET_SUCCESS)
 199   1          {
 200   2              status = CySpcGetAlgorithm();
 201   2      
 202   2              if(CYRET_STARTED == status)
 203   2              {
 204   3                  while(CY_SPC_BUSY)
 205   3                  {
 206   4                      /* Spin until idle. */
 207   4                      CyDelayUs(1u);
 208   4                  }
 209   3      
 210   3                  if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 211   3                  {
 212   4                      status = CYRET_SUCCESS;
 213   4                  }
 214   3              }
 215   2              CySpcUnlock();
 216   2          }
 217   1          else
 218   1          {
 219   2              status = CYRET_LOCKED;
 220   2          }
 221   1      
 222   1          return (status);
 223   1      }
 224          
 225          
 226          /*******************************************************************************
 227          * Function Name: CySetTemp
 228          ****************************************************************************//**
 229          *
 230          *  This is a wraparound for CySetTempInt(). It is used to return the second
 231          *  successful read of the temperature value.
 232          *
 233          * \return
 234          *  status:
 235          *   CYRET_SUCCESS if successful.
 236          *   CYRET_LOCKED  if Flash writing already in use
 237          *   CYRET_UNKNOWN if there was an SPC error.
 238          *
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 5   

 239          *  uint8 dieTemperature[2]:
 240          *   Holds the die temperature for the flash writing algorithm. The first byte is
 241          *   the sign of the temperature (0 = negative, 1 = positive). The second byte is
 242          *   the magnitude.
 243          *
 244          *******************************************************************************/
 245          cystatus CySetTemp(void) 
 246          {
 247   1          cystatus status = CyFlashGetSpcAlgorithm();
 248   1      
 249   1          if(status == CYRET_SUCCESS)
 250   1          {
 251   2              status = CySetTempInt();
 252   2          }
 253   1      
 254   1          return (status);
 255   1      }
 256          
 257          
 258          /*******************************************************************************
 259          * Function Name: CySetFlashEEBuffer
 260          ****************************************************************************//**
 261          *
 262          *  Sets the user supplied temporary buffer to store SPC data while performing
 263          *  Flash and EEPROM commands. This buffer is only necessary when the Flash ECC
 264          *  is disabled.
 265          *
 266          *  \param buffer:
 267          *   The address of a block of memory to store temporary memory. The size of the
 268          *   block of memory is CYDEV_FLS_ROW_SIZE + CYDEV_ECC_ROW_SIZE.
 269          *
 270          * \return
 271          *  status:
 272          *   CYRET_SUCCESS if successful.
 273          *   CYRET_BAD_PARAM if the buffer is NULL
 274          *
 275          *******************************************************************************/
 276          cystatus CySetFlashEEBuffer(uint8 * buffer) 
 277          {
 278   1          cystatus status = CYRET_SUCCESS;
 279   1      
 280   1          CySpcStart();
 281   1      
 282   1          #if(CYDEV_ECC_ENABLE == 0)
 283   1      
 284   1              if(NULL == buffer)
 285   1              {
 286   2                  rowBuffer = rowBuffer;
 287   2                  status = CYRET_BAD_PARAM;
 288   2              }
 289   1              else if(CySpcLock() != CYRET_SUCCESS)
 290   1              {
 291   2                  rowBuffer = rowBuffer;
 292   2                  status = CYRET_LOCKED;
 293   2              }
 294   1              else
 295   1              {
 296   2                  rowBuffer = buffer;
 297   2                  CySpcUnlock();
 298   2              }
 299   1      
 300   1          #else
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 6   

              
                      /* To suppress warning */
                      buffer = buffer;
              
                  #endif  /* (CYDEV_ECC_ENABLE == 0u) */
 306   1      
 307   1          return(status);
 308   1      }
 309          
 310          
 311          /*******************************************************************************
 312          * Function Name: CyWriteRowData
 313          ****************************************************************************//**
 314          *
 315          *  Sends a command to the SPC to load and program a row of data in
 316          *  Flash or EEPROM.
 317          *
 318          *  \param arrayID:    ID of the array to write.
 319          *   The type of write, Flash or EEPROM, is determined from the array ID.
 320          *   The arrays in the part are sequential starting at the first ID for the
 321          *   specific memory type. The array ID for the Flash memory lasts from 0x00 to
 322          *   0x3F and for the EEPROM memory it lasts from 0x40 to 0x7F.
 323          *  \param rowAddress: rowAddress of flash row to program.
 324          *  \param rowData:    Array of bytes to write.
 325          *
 326          * \return
 327          *  status:
 328          *   CYRET_SUCCESS if successful.
 329          *   CYRET_LOCKED if the SPC is already in use.
 330          *   CYRET_CANCELED if command not accepted
 331          *   CYRET_UNKNOWN if there was an SPC error.
 332          *
 333          *******************************************************************************/
 334          cystatus CyWriteRowData(uint8 arrayId, uint16 rowAddress, const uint8 * rowData) 
 335          {
 336   1          uint16 rowSize;
 337   1          cystatus status;
 338   1      
 339   1          rowSize = (arrayId > CY_SPC_LAST_FLASH_ARRAYID) ? CYDEV_EEPROM_ROW_SIZE : CYDEV_FLS_ROW_SIZE;
 340   1          status = CyWriteRowFull(arrayId, rowAddress, rowData, rowSize);
 341   1      
 342   1          return(status);
 343   1      }
 344          
 345          
 346          /*******************************************************************
 347          * If "Enable Error Correcting Code (ECC)" and "Store Configuration
 348          * Data in ECC" DWR options are disabled, ECC section is available
 349          * for user data.
 350          *******************************************************************/
 351          #if ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u))
              
                  /*******************************************************************************
                  * Function Name: CyWriteRowConfig
                  ****************************************************************************//**
                  *
                  *  Sends a command to the SPC to load and program a row of config data in the
                  *  Flash. This function is only valid for Flash array IDs (not for EEPROM).
                  *
                  *  \param arrayId:      ID of the array to write
                  *   The arrays in the part are sequential starting at the first ID for the
                  *   specific memory type. The array ID for the Flash memory lasts
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 7   

                  *   from 0x00 to 0x3F.
                  *  \param rowAddress:   The address of the sector to erase.
                  *  \param rowECC:       The array of bytes to write.
                  *
                  * \return
                  *  status:
                  *   CYRET_SUCCESS if successful.
                  *   CYRET_LOCKED if the SPC is already in use.
                  *   CYRET_CANCELED if command not accepted
                  *   CYRET_UNKNOWN if there was an SPC error.
                  *
                  *******************************************************************************/
                  cystatus CyWriteRowConfig(uint8 arrayId, uint16 rowAddress, const uint8 * rowECC)\
                  
                  {
                      cystatus status;
              
                      status = CyWriteRowFull(arrayId, rowAddress, rowECC, CYDEV_ECC_ROW_SIZE);
              
                      return (status);
                  }
              
              #endif  /* ((CYDEV_ECC_ENABLE == 0u) && (CYDEV_CONFIGURATION_ECC == 0u)) */
 386          
 387          
 388          
 389          /*******************************************************************************
 390          * Function Name: CyWriteRowFull
 391          ****************************************************************************//**
 392          *  Sends a command to the SPC to load and program a row of data in the Flash.
 393          *  rowData array is expected to contain Flash and ECC data if needed.
 394          *
 395          *  \param arrayId:    FLASH or EEPROM array id.
 396          *  \param rowData:    Pointer to a row of data to write.
 397          *  \param rowNumber:  Zero based number of the row.
 398          *  \param rowSize:    Size of the row.
 399          *
 400          * \return
 401          *  CYRET_SUCCESS if successful.
 402          *  CYRET_LOCKED if the SPC is already in use.
 403          *  CYRET_CANCELED if command not accepted
 404          *  CYRET_UNKNOWN if there was an SPC error.
 405          *
 406          *******************************************************************************/
 407          cystatus CyWriteRowFull(uint8 arrayId, uint16 rowNumber, const uint8* rowData, uint16 rowSize) \
 408                  
 409          {
 410   1          cystatus status = CYRET_SUCCESS;
 411   1      
 412   1          if((arrayId <=  CY_SPC_LAST_FLASH_ARRAYID) && (arrayId > (CY_FLASH_NUMBER_ARRAYS  + CY_SPC_FIRST_FLASH
             -_ARRAYID)))
 413   1          {
 414   2              status = CYRET_BAD_PARAM;
 415   2          }
 416   1      
 417   1          if(arrayId > CY_SPC_LAST_EE_ARRAYID)
 418   1          {
 419   2              status = CYRET_BAD_PARAM;
 420   2          }
 421   1      
 422   1          if((arrayId >= CY_SPC_FIRST_EE_ARRAYID) && (arrayId > (CY_FLASH_EEPROM_NUMBER_ARRAYS + CY_SPC_FIRST_EE
             -_ARRAYID)))
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 8   

 423   1          {
 424   2              status = CYRET_BAD_PARAM;
 425   2          }
 426   1      
 427   1          if(arrayId <=  CY_SPC_LAST_FLASH_ARRAYID)
 428   1          {
 429   2              /* Flash */
 430   2              if(rowNumber > (CY_FLASH_NUMBER_ROWS/CY_FLASH_NUMBER_ARRAYS))
 431   2              {
 432   3                  status = CYRET_BAD_PARAM;
 433   3              }
 434   2          }
 435   1          else
 436   1          {
 437   2              /* EEPROM */
 438   2              if(rowNumber > (CY_EEPROM_NUMBER_ROWS/CY_FLASH_EEPROM_NUMBER_ARRAYS))
 439   2              {
 440   3                  status = CYRET_BAD_PARAM;
 441   3              }
 442   2      
 443   2              if(CY_EEPROM_SIZEOF_ROW != rowSize)
 444   2              {
 445   3                  status = CYRET_BAD_PARAM;
 446   3              }
 447   2          }
 448   1      
 449   1          if(rowData == NULL)
 450   1          {
 451   2              status = CYRET_BAD_PARAM;
 452   2          }
 453   1      
 454   1      
 455   1          if(status == CYRET_SUCCESS)
 456   1          {
 457   2              if(CySpcLock() == CYRET_SUCCESS)
 458   2              {
 459   3                  /* Load row data into SPC internal latch */
 460   3                  status = CySpcLoadRowFull(arrayId, rowNumber, rowData, rowSize);
 461   3      
 462   3                  if(CYRET_STARTED == status)
 463   3                  {
 464   4                      while(CY_SPC_BUSY)
 465   4                      {
 466   5                          /* Wait for SPC to finish and get SPC status */
 467   5                          CyDelayUs(1u);
 468   5                      }
 469   4      
 470   4                      /* Hide SPC status */
 471   4                      if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 472   4                      {
 473   5                          status = CYRET_SUCCESS;
 474   5                      }
 475   4                      else
 476   4                      {
 477   5                          status = CYRET_UNKNOWN;
 478   5                      }
 479   4      
 480   4                      if(CYRET_SUCCESS == status)
 481   4                      {
 482   5                          /* Erase and program flash with data from SPC interval latch */
 483   5                          status = CySpcWriteRow(arrayId, rowNumber, dieTemperature[0u], dieTemperature[1u]);
 484   5      
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 9   

 485   5                          if(CYRET_STARTED == status)
 486   5                          {
 487   6                              while(CY_SPC_BUSY)
 488   6                              {
 489   7                                  /* Wait for SPC to finish and get SPC status */
 490   7                                  CyDelayUs(1u);
 491   7                              }
 492   6      
 493   6                              /* Hide SPC status */
 494   6                              if(CY_SPC_STATUS_SUCCESS == CY_SPC_READ_STATUS)
 495   6                              {
 496   7                                  status = CYRET_SUCCESS;
 497   7                              }
 498   6                              else
 499   6                              {
 500   7                                  status = CYRET_UNKNOWN;
 501   7                              }
 502   6                          }
 503   5                      }
 504   4                  }
 505   3                  CySpcUnlock();
 506   3              }   /* if(CySpcLock() == CYRET_SUCCESS) */
 507   2              else
 508   2              {
 509   3                  status = CYRET_LOCKED;
 510   3              }
 511   2          }
 512   1      
 513   1          return(status);
 514   1      }
 515          
 516          
 517          /*******************************************************************************
 518          * Function Name: CyFlash_SetWaitCycles
 519          ****************************************************************************//**
 520          *
 521          *  Sets the number of clock cycles the cache will wait before it samples data
 522          *  coming back from the Flash. This function must be called before increasing
 523          *  the CPU clock frequency. It can optionally be called after lowering the CPU
 524          *  clock frequency in order to improve the CPU performance.
 525          *
 526          *  \param uint8 freq:
 527          *   Frequency of operation in Megahertz.
 528          *
 529          *******************************************************************************/
 530          void CyFlash_SetWaitCycles(uint8 freq) 
 531          {
 532   1          uint8 interruptState;
 533   1      
 534   1          /* Save current global interrupt enable and disable it */
 535   1          interruptState = CyEnterCriticalSection();
 536   1      
 537   1          /***************************************************************************
 538   1          * The number of clock cycles the cache will wait before it samples data
 539   1          * coming back from the Flash must be equal or greater to to the CPU frequency
 540   1          * outlined in clock cycles.
 541   1          ***************************************************************************/
 542   1      
 543   1          if (freq < CY_FLASH_CACHE_WS_1_FREQ_MAX)
 544   1          {
 545   2              CY_FLASH_CONTROL_REG = (CY_FLASH_CONTROL_REG & (uint8)(~CY_FLASH_CACHE_WS_VALUE_MASK)) |
 546   2                                          CY_FLASH_CACHE_WS_1_VALUE_MASK;
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 10  

 547   2          }
 548   1          else if (freq < CY_FLASH_CACHE_WS_2_FREQ_MAX)
 549   1          {
 550   2              CY_FLASH_CONTROL_REG = (CY_FLASH_CONTROL_REG & (uint8)(~CY_FLASH_CACHE_WS_VALUE_MASK)) |
 551   2                                          CY_FLASH_CACHE_WS_2_VALUE_MASK;
 552   2          }
 553   1          else if (freq < CY_FLASH_CACHE_WS_3_FREQ_MAX)
 554   1          {
 555   2              CY_FLASH_CONTROL_REG = (CY_FLASH_CONTROL_REG & (uint8)(~CY_FLASH_CACHE_WS_VALUE_MASK)) |
 556   2                                          CY_FLASH_CACHE_WS_3_VALUE_MASK;
 557   2          }
 558   1      #if (CY_PSOC5)
                  else if (freq < CY_FLASH_CACHE_WS_4_FREQ_MAX)
                  {
                      CY_FLASH_CONTROL_REG = (CY_FLASH_CONTROL_REG & (uint8)(~CY_FLASH_CACHE_WS_VALUE_MASK)) |
                                                  CY_FLASH_CACHE_WS_4_VALUE_MASK;
                  }
                  else if (freq <= CY_FLASH_CACHE_WS_5_FREQ_MAX)
                  {
                      CY_FLASH_CONTROL_REG = (CY_FLASH_CONTROL_REG & (uint8)(~CY_FLASH_CACHE_WS_VALUE_MASK)) |
                                                  CY_FLASH_CACHE_WS_5_VALUE_MASK;
                  }
              #endif  /* (CY_PSOC5) */
 570   1          else
 571   1          {
 572   2              /* Halt CPU in debug mode if frequency is invalid */
 573   2              CYASSERT(0u != 0u);
 574   2          }
 575   1      
 576   1          /* Restore global interrupt enable state */
 577   1          CyExitCriticalSection(interruptState);
 578   1      }
 579          
 580          
 581          /*******************************************************************************
 582          * Function Name: CyEEPROM_Start
 583          ****************************************************************************//**
 584          *
 585          *  Enable the EEPROM.
 586          *
 587          *******************************************************************************/
 588          void CyEEPROM_Start(void) 
 589          {
 590   1          uint8 interruptState;
 591   1      
 592   1          interruptState = CyEnterCriticalSection();
 593   1      
 594   1      
 595   1          /***************************************************************************
 596   1          * Enable SPC clock. This also internally enables the 36MHz IMO, since this
 597   1          * is required for the SPC to function.
 598   1          ***************************************************************************/
 599   1          CY_FLASH_PM_ACT_CFG0_REG    |= CY_FLASH_PM_ACT_CFG0_EN_CLK_SPC;
 600   1          CY_FLASH_PM_ALTACT_CFG0_REG |= CY_FLASH_PM_ALTACT_CFG0_EN_CLK_SPC;
 601   1      
 602   1      
 603   1          /***************************************************************************
 604   1          * The wake count defines the number of Bus Clock cycles it takes for the
 605   1          * flash or EEPROM to wake up from a low power mode independent of the chip
 606   1          * power mode. Wake up time for these blocks is 5 us.
 607   1          * The granularity of this register is 2 Bus Clock cycles, so a value of 0x1E
 608   1          * (30d) defines the wake up time as 60 cycles of the Bus Clock.
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 11  

 609   1          * This register needs to be written with a value dependent on the Bus Clock
 610   1          * frequency so that the duration of the cycles is equal to or greater than
 611   1          * the 5 us delay required.
 612   1          ***************************************************************************/
 613   1          CY_FLASH_SPC_FM_EE_WAKE_CNT_REG = CY_FLASH_SPC_FM_EE_WAKE_CNT_80MHZ;
 614   1      
 615   1      
 616   1          /***************************************************************************
 617   1          * Enable EEPROM. Re-enabling an EEPROM macro takes 5us. During this time,
 618   1          * the EE will not acknowledge a PHUB request.
 619   1          ***************************************************************************/
 620   1          CY_FLASH_PM_ACT_CFG12_REG    |= CY_FLASH_PM_ACT_CFG12_EN_EE;
 621   1          CY_FLASH_PM_ALTACT_CFG12_REG |= CY_FLASH_PM_ALTACT_CFG12_EN_EE;
 622   1      
 623   1          while(0u == (CY_FLASH_SPC_FM_EE_CR_REG & CY_FLASH_EE_EE_AWAKE))
 624   1          {
 625   2              /* Non-zero status denotes that the EEPROM/Flash is awake & powered. */
 626   2          }
 627   1      
 628   1          CyExitCriticalSection(interruptState);
 629   1      }
 630          
 631          
 632          /*******************************************************************************
 633          * Function Name: CyEEPROM_Stop
 634          ****************************************************************************//**
 635          *
 636          *  Disable the EEPROM.
 637          *
 638          *******************************************************************************/
 639          void CyEEPROM_Stop (void) 
 640          {
 641   1          uint8 interruptState;
 642   1      
 643   1          interruptState = CyEnterCriticalSection();
 644   1      
 645   1          CY_FLASH_PM_ACT_CFG12_REG    &= ((uint8)(~CY_FLASH_PM_ACT_CFG12_EN_EE));
 646   1          CY_FLASH_PM_ALTACT_CFG12_REG &= ((uint8)(~CY_FLASH_PM_ALTACT_CFG12_EN_EE));
 647   1      
 648   1          CyExitCriticalSection(interruptState);
 649   1      }
 650          
 651          
 652          /*******************************************************************************
 653          * Function Name: CyEEPROM_ReadReserve
 654          ****************************************************************************//**
 655          *
 656          *  Request access to the EEPROM for reading and wait until access is available.
 657          *
 658          *******************************************************************************/
 659          void CyEEPROM_ReadReserve(void) 
 660          {
 661   1          /* Make request for PHUB to have access */
 662   1          CY_FLASH_EE_SCR_REG |= CY_FLASH_EE_SCR_AHB_EE_REQ;
 663   1      
 664   1          while (0u == (CY_FLASH_EE_SCR_REG & CY_FLASH_EE_SCR_AHB_EE_ACK))
 665   1          {
 666   2              /* Wait for acknowledgment from PHUB */
 667   2          }
 668   1      }
 669          
 670          
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 12  

 671          /*******************************************************************************
 672          * Function Name: CyEEPROM_ReadRelease
 673          ****************************************************************************//**
 674          *
 675          *  Release the read reservation of the EEPROM.
 676          *
 677          *******************************************************************************/
 678          void CyEEPROM_ReadRelease(void) 
 679          {
 680   1          CY_FLASH_EE_SCR_REG &= (uint8)(~CY_FLASH_EE_SCR_AHB_EE_REQ);
 681   1      }
 682          
 683          
 684          /* [] END OF FILE */
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION CyFlash_Start (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 53
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#interruptState
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 60
0008 9043A0            MOV     DPTR,#043A0H
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 4408              ORL     A,#08H
0010 FF                MOV     R7,A
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 61
0013 9043B0            MOV     DPTR,#043B0H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 4408              ORL     A,#08H
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 74
001E 904701            MOV     DPTR,#04701H
0021 74C8              MOV     A,#0C8H
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 84
0024 9043AC            MOV     DPTR,#043ACH
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 4401              ORL     A,#01H
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 85
002F 9043BC            MOV     DPTR,#043BCH
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 4401              ORL     A,#01H
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
003A         ?C0001:
                                           ; SOURCE LINE # 87
003A 904700            MOV     DPTR,#04700H
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 5420              ANL     A,#020H
0042 FF                MOV     R7,A
0043 7E00              MOV     R6,#00H
0045 EF                MOV     A,R7
0046 4E                ORL     A,R6
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 14  

0047 60F1              JZ      ?C0001
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 90
0049         ?C0002:
                                           ; SOURCE LINE # 92
0049 900000      R     MOV     DPTR,#interruptState
004C E0                MOVX    A,@DPTR
004D FF                MOV     R7,A
004E 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 93
0051         ?C0003:
0051 22                RET     
             ; FUNCTION CyFlash_Start (END)

             ; FUNCTION CyFlash_Stop (BEGIN)
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 111
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#interruptState
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
0008 9043AC            MOV     DPTR,#043ACH
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 54FE              ANL     A,#0FEH
0010 FF                MOV     R7,A
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 114
0013 9043BC            MOV     DPTR,#043BCH
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 54FE              ANL     A,#0FEH
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
001E 900000      R     MOV     DPTR,#interruptState
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 117
0026         ?C0004:
0026 22                RET     
             ; FUNCTION CyFlash_Stop (END)

             ; FUNCTION CySetTempInt (BEGIN)
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 140
0000 120000      E     LCALL   CySpcStart
                                           ; SOURCE LINE # 143
0003 900000      R     MOV     DPTR,#status
0006 74FF              MOV     A,#0FFH
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
0009 120000      E     LCALL   CySpcLock
000C EF                MOV     A,R7
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 15  

000D 704C              JNZ     ?C0005
                                           ; SOURCE LINE # 146
                                           ; SOURCE LINE # 148
000F 7F01              MOV     R7,#01H
0011 120000      E     LCALL   _CySpcGetTemp
0014 EF                MOV     A,R7
0015 6407              XRL     A,#07H
0017 703D              JNZ     ?C0006
                                           ; SOURCE LINE # 149
0019         ?C0009:
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 152
0019 7B01              MOV     R3,#01H
001B 7A00        R     MOV     R2,#HIGH dieTemperature
001D 7900        R     MOV     R1,#LOW dieTemperature
001F 7D02              MOV     R5,#02H
0021 120000      E     LCALL   _CySpcReadData
0024 EF                MOV     A,R7
0025 B4021F            CJNE    A,#02H,?C0007
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
0028 900000      R     MOV     DPTR,#status
002B E4                CLR     A
002C F0                MOVX    @DPTR,A
002D         ?C0011:
                                           ; SOURCE LINE # 156
002D 904722            MOV     DPTR,#04722H
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 EF                MOV     A,R7
0033 5402              ANL     A,#02H
0035 FF                MOV     R7,A
0036 7E00              MOV     R6,#00H
0038 EF                MOV     A,R7
0039 4E                ORL     A,R6
003A 701A              JNZ     ?C0006
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 159
003C 7F01              MOV     R7,#01H
003E 7E00              MOV     R6,#00H
0040 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 160
0043 80E8              SJMP    ?C0011
0045         ?C0012:
                                           ; SOURCE LINE # 161
0045 800F              SJMP    ?C0006
                                           ; SOURCE LINE # 162
0047         ?C0010:
                                           ; SOURCE LINE # 164
0047         ?C0007:
0047 904722            MOV     DPTR,#04722H
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C EF                MOV     A,R7
004D 5402              ANL     A,#02H
004F FF                MOV     R7,A
0050 7E00              MOV     R6,#00H
0052 EF                MOV     A,R7
0053 4E                ORL     A,R6
0054 60C3              JZ      ?C0009
0056         ?C0008:
                                           ; SOURCE LINE # 165
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 16  

0056         ?C0006:
                                           ; SOURCE LINE # 167
0056 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 168
0059 8006              SJMP    ?C0013
005B         ?C0005:
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
005B 900000      R     MOV     DPTR,#status
005E 7404              MOV     A,#04H
0060 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
0061         ?C0013:
                                           ; SOURCE LINE # 174
0061 900000      R     MOV     DPTR,#status
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
                                           ; SOURCE LINE # 175
0066         ?C0014:
0066 22                RET     
             ; FUNCTION CySetTempInt (END)

             ; FUNCTION CyFlashGetSpcAlgorithm (BEGIN)
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 196
0000 120000      E     LCALL   CySpcStart
                                           ; SOURCE LINE # 198
0003 120000      E     LCALL   CySpcLock
0006 EF                MOV     A,R7
0007 7055              JNZ     ?C0015
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
0009 120000      E     LCALL   CySpcGetAlgorithm
000C 900000      R     MOV     DPTR,#status
000F EF                MOV     A,R7
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
0011 900000      R     MOV     DPTR,#status
0014 E0                MOVX    A,@DPTR
0015 FF                MOV     R7,A
0016 EF                MOV     A,R7
0017 6407              XRL     A,#07H
0019 703E              JNZ     ?C0016
                                           ; SOURCE LINE # 203
001B         ?C0017:
                                           ; SOURCE LINE # 204
001B 904722            MOV     DPTR,#04722H
001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 EF                MOV     A,R7
0021 5402              ANL     A,#02H
0023 FF                MOV     R7,A
0024 7E00              MOV     R6,#00H
0026 EF                MOV     A,R7
0027 4E                ORL     A,R6
0028 7009              JNZ     ?C0018
                                           ; SOURCE LINE # 205
                                           ; SOURCE LINE # 207
002A 7F01              MOV     R7,#01H
002C 7E00              MOV     R6,#00H
002E 120000      E     LCALL   _CyDelayUs
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 17  

                                           ; SOURCE LINE # 208
0031 80E8              SJMP    ?C0017
0033         ?C0018:
                                           ; SOURCE LINE # 210
0033 904722            MOV     DPTR,#04722H
0036 E0                MOVX    A,@DPTR
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 5402              ANL     A,#02H
003B FF                MOV     R7,A
003C 7E00              MOV     R6,#00H
003E EF                MOV     A,R7
003F 4E                ORL     A,R6
0040 600D              JZ      ?C0020
0042 904722            MOV     DPTR,#04722H
0045 E0                MOVX    A,@DPTR
0046 FF                MOV     R7,A
0047 EF                MOV     A,R7
0048 13                RRC     A
0049 13                RRC     A
004A 543F              ANL     A,#03FH
004C FF                MOV     R7,A
004D 8002              SJMP    ?C0021
004F         ?C0020:
004F 7FFF              MOV     R7,#0FFH
0051         ?C0021:
0051 EF                MOV     A,R7
0052 7005              JNZ     ?C0016
                                           ; SOURCE LINE # 211
                                           ; SOURCE LINE # 212
0054 900000      R     MOV     DPTR,#status
0057 E4                CLR     A
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 213
0059         ?C0019:
                                           ; SOURCE LINE # 214
0059         ?C0016:
                                           ; SOURCE LINE # 215
0059 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 216
005C 8006              SJMP    ?C0022
005E         ?C0015:
                                           ; SOURCE LINE # 218
                                           ; SOURCE LINE # 219
005E 900000      R     MOV     DPTR,#status
0061 7404              MOV     A,#04H
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
0064         ?C0022:
                                           ; SOURCE LINE # 222
0064 900000      R     MOV     DPTR,#status
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
                                           ; SOURCE LINE # 223
0069         ?C0023:
0069 22                RET     
             ; FUNCTION CyFlashGetSpcAlgorithm (END)

             ; FUNCTION CySetTemp (BEGIN)
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 247
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 18  

0000 120000      R     LCALL   CyFlashGetSpcAlgorithm
0003 900000      R     MOV     DPTR,#status
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 249
0008 900000      R     MOV     DPTR,#status
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 7008              JNZ     ?C0024
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 251
0010 120000      R     LCALL   CySetTempInt
0013 900000      R     MOV     DPTR,#status
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
0018         ?C0024:
                                           ; SOURCE LINE # 254
0018 900000      R     MOV     DPTR,#status
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
                                           ; SOURCE LINE # 255
001D         ?C0025:
001D 22                RET     
             ; FUNCTION CySetTemp (END)

             ; FUNCTION _CySetFlashEEBuffer (BEGIN)
                                           ; SOURCE LINE # 276
0000 900000      R     MOV     DPTR,#buffer
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
000B 900000      R     MOV     DPTR,#status
000E E4                CLR     A
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 280
0010 120000      E     LCALL   CySpcStart
                                           ; SOURCE LINE # 284
0013 7B00              MOV     R3,#00H
0015 7A00              MOV     R2,#00H
0017 7900              MOV     R1,#00H
0019 C003              PUSH    AR3
001B C002              PUSH    AR2
001D C001              PUSH    AR1
001F 900000      R     MOV     DPTR,#buffer
0022 E0                MOVX    A,@DPTR
0023 FB                MOV     R3,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 FA                MOV     R2,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 F9                MOV     R1,A
002A D082              POP     DPL
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 19  

002C D083              POP     DPH
002E D0E0              POP     ACC
0030 6B                XRL     A,R3
0031 7008              JNZ     ?C0078
0033 E9                MOV     A,R1
0034 6582              XRL     A,DPL
0036 7003              JNZ     ?C0078
0038 EA                MOV     A,R2
0039 6583              XRL     A,DPH
003B         ?C0078:
003B 701E              JNZ     ?C0026
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
003D 900000      R     MOV     DPTR,#rowBuffer
0040 E0                MOVX    A,@DPTR
0041 FB                MOV     R3,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 FA                MOV     R2,A
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 F9                MOV     R1,A
0048 900000      R     MOV     DPTR,#rowBuffer
004B EB                MOV     A,R3
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E EA                MOV     A,R2
004F F0                MOVX    @DPTR,A
0050 A3                INC     DPTR
0051 E9                MOV     A,R1
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
0053 900000      R     MOV     DPTR,#status
0056 7401              MOV     A,#01H
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 288
0059 803D              SJMP    ?C0027
005B         ?C0026:
                                           ; SOURCE LINE # 289
005B 120000      E     LCALL   CySpcLock
005E EF                MOV     A,R7
005F 601E              JZ      ?C0028
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 291
0061 900000      R     MOV     DPTR,#rowBuffer
0064 E0                MOVX    A,@DPTR
0065 FB                MOV     R3,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 FA                MOV     R2,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B F9                MOV     R1,A
006C 900000      R     MOV     DPTR,#rowBuffer
006F EB                MOV     A,R3
0070 F0                MOVX    @DPTR,A
0071 A3                INC     DPTR
0072 EA                MOV     A,R2
0073 F0                MOVX    @DPTR,A
0074 A3                INC     DPTR
0075 E9                MOV     A,R1
0076 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 20  

                                           ; SOURCE LINE # 292
0077 900000      R     MOV     DPTR,#status
007A 7404              MOV     A,#04H
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
007D 8019              SJMP    ?C0027
007F         ?C0028:
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 296
007F 900000      R     MOV     DPTR,#buffer
0082 E0                MOVX    A,@DPTR
0083 FB                MOV     R3,A
0084 A3                INC     DPTR
0085 E0                MOVX    A,@DPTR
0086 FA                MOV     R2,A
0087 A3                INC     DPTR
0088 E0                MOVX    A,@DPTR
0089 F9                MOV     R1,A
008A 900000      R     MOV     DPTR,#rowBuffer
008D EB                MOV     A,R3
008E F0                MOVX    @DPTR,A
008F A3                INC     DPTR
0090 EA                MOV     A,R2
0091 F0                MOVX    @DPTR,A
0092 A3                INC     DPTR
0093 E9                MOV     A,R1
0094 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 297
0095 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 298
0098         ?C0029:
0098         ?C0027:
                                           ; SOURCE LINE # 307
0098 900000      R     MOV     DPTR,#status
009B E0                MOVX    A,@DPTR
009C FF                MOV     R7,A
                                           ; SOURCE LINE # 308
009D         ?C0030:
009D 22                RET     
             ; FUNCTION _CySetFlashEEBuffer (END)

             ; FUNCTION _CyWriteRowData (BEGIN)
                                           ; SOURCE LINE # 334
0000 900000      R     MOV     DPTR,#arrayId
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowAddress
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowData
0010 EB                MOV     A,R3
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 EA                MOV     A,R2
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 E9                MOV     A,R1
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 21  

                                           ; SOURCE LINE # 339
0018 900000      R     MOV     DPTR,#arrayId
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E D3                SETB    C
001F 943F              SUBB    A,#03FH
0021 4006              JC      ?C0031
0023 7E00              MOV     R6,#00H
0025 7F10              MOV     R7,#010H
0027 8004              SJMP    ?C0032
0029         ?C0031:
0029 7E01              MOV     R6,#01H
002B 7F00              MOV     R7,#00H
002D         ?C0032:
002D 900000      R     MOV     DPTR,#rowSize
0030 EE                MOV     A,R6
0031 F0                MOVX    @DPTR,A
0032 A3                INC     DPTR
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 340
0035 900000      R     MOV     DPTR,#arrayId
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A C007              PUSH    AR7
003C 900000      R     MOV     DPTR,#rowAddress
003F E0                MOVX    A,@DPTR
0040 FC                MOV     R4,A
0041 A3                INC     DPTR
0042 E0                MOVX    A,@DPTR
0043 FD                MOV     R5,A
0044 900000      R     MOV     DPTR,#rowData
0047 E0                MOVX    A,@DPTR
0048 FB                MOV     R3,A
0049 A3                INC     DPTR
004A E0                MOVX    A,@DPTR
004B FA                MOV     R2,A
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E F9                MOV     R1,A
004F 900000      R     MOV     DPTR,#rowSize
0052 E0                MOVX    A,@DPTR
0053 FE                MOV     R6,A
0054 A3                INC     DPTR
0055 E0                MOVX    A,@DPTR
0056 FF                MOV     R7,A
0057 900000      R     MOV     DPTR,#?_CyWriteRowFull?BYTE+06H
005A EE                MOV     A,R6
005B F0                MOVX    @DPTR,A
005C A3                INC     DPTR
005D EF                MOV     A,R7
005E F0                MOVX    @DPTR,A
005F D007              POP     AR7
0061 120000      R     LCALL   _CyWriteRowFull
0064 900000      R     MOV     DPTR,#status
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 342
0069 900000      R     MOV     DPTR,#status
006C E0                MOVX    A,@DPTR
006D FF                MOV     R7,A
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 22  

                                           ; SOURCE LINE # 343
006E         ?C0033:
006E 22                RET     
             ; FUNCTION _CyWriteRowData (END)

             ; FUNCTION _CyWriteRowFull (BEGIN)
                                           ; SOURCE LINE # 407
0000 900000      R     MOV     DPTR,#arrayId
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#rowNumber
0008 EC                MOV     A,R4
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D 900000      R     MOV     DPTR,#rowData
0010 EB                MOV     A,R3
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 EA                MOV     A,R2
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 E9                MOV     A,R1
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 409
                                           ; SOURCE LINE # 410
0018 900000      R     MOV     DPTR,#status
001B E4                CLR     A
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 412
001D 900000      R     MOV     DPTR,#arrayId
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 EF                MOV     A,R7
0023 D3                SETB    C
0024 943F              SUBB    A,#03FH
0026 5011              JNC     ?C0034
0028 900000      R     MOV     DPTR,#arrayId
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E D3                SETB    C
002F 9401              SUBB    A,#01H
0031 4006              JC      ?C0034
                                           ; SOURCE LINE # 413
                                           ; SOURCE LINE # 414
0033 900000      R     MOV     DPTR,#status
0036 7401              MOV     A,#01H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 415
0039         ?C0034:
                                           ; SOURCE LINE # 417
0039 900000      R     MOV     DPTR,#arrayId
003C E0                MOVX    A,@DPTR
003D FF                MOV     R7,A
003E EF                MOV     A,R7
003F D3                SETB    C
0040 947F              SUBB    A,#07FH
0042 4006              JC      ?C0035
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 419
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 23  

0044 900000      R     MOV     DPTR,#status
0047 7401              MOV     A,#01H
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 420
004A         ?C0035:
                                           ; SOURCE LINE # 422
004A 900000      R     MOV     DPTR,#arrayId
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F EF                MOV     A,R7
0050 C3                CLR     C
0051 9440              SUBB    A,#040H
0053 4011              JC      ?C0036
0055 900000      R     MOV     DPTR,#arrayId
0058 E0                MOVX    A,@DPTR
0059 FF                MOV     R7,A
005A EF                MOV     A,R7
005B D3                SETB    C
005C 9441              SUBB    A,#041H
005E 4006              JC      ?C0036
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
0060 900000      R     MOV     DPTR,#status
0063 7401              MOV     A,#01H
0065 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
0066         ?C0036:
                                           ; SOURCE LINE # 427
0066 900000      R     MOV     DPTR,#arrayId
0069 E0                MOVX    A,@DPTR
006A FF                MOV     R7,A
006B EF                MOV     A,R7
006C D3                SETB    C
006D 943F              SUBB    A,#03FH
006F 5021              JNC     ?C0037
                                           ; SOURCE LINE # 428
                                           ; SOURCE LINE # 430
0071 900000      R     MOV     DPTR,#rowNumber
0074 E0                MOVX    A,@DPTR
0075 FE                MOV     R6,A
0076 A3                INC     DPTR
0077 E0                MOVX    A,@DPTR
0078 FF                MOV     R7,A
0079 E4                CLR     A
007A FC                MOV     R4,A
007B FD                MOV     R5,A
007C 7B00              MOV     R3,#00H
007E 7A01              MOV     R2,#01H
0080 7900              MOV     R1,#00H
0082 7800              MOV     R0,#00H
0084 C3                CLR     C
0085 120000      E     LCALL   ?C?ULCMP
0088 5033              JNC     ?C0039
                                           ; SOURCE LINE # 431
                                           ; SOURCE LINE # 432
008A 900000      R     MOV     DPTR,#status
008D 7401              MOV     A,#01H
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 433
0090         ?C0038:
                                           ; SOURCE LINE # 434
0090 802B              SJMP    ?C0039
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 24  

0092         ?C0037:
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 438
0092 900000      R     MOV     DPTR,#rowNumber
0095 E0                MOVX    A,@DPTR
0096 FE                MOV     R6,A
0097 A3                INC     DPTR
0098 E0                MOVX    A,@DPTR
0099 FF                MOV     R7,A
009A D3                SETB    C
009B EF                MOV     A,R7
009C 9480              SUBB    A,#080H
009E EE                MOV     A,R6
009F 9400              SUBB    A,#00H
00A1 4006              JC      ?C0040
                                           ; SOURCE LINE # 439
                                           ; SOURCE LINE # 440
00A3 900000      R     MOV     DPTR,#status
00A6 7401              MOV     A,#01H
00A8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 441
00A9         ?C0040:
                                           ; SOURCE LINE # 443
00A9 900000      R     MOV     DPTR,#rowSize
00AC E0                MOVX    A,@DPTR
00AD FE                MOV     R6,A
00AE A3                INC     DPTR
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 6410              XRL     A,#010H
00B4 4E                ORL     A,R6
00B5 6006              JZ      ?C0039
                                           ; SOURCE LINE # 444
                                           ; SOURCE LINE # 445
00B7 900000      R     MOV     DPTR,#status
00BA 7401              MOV     A,#01H
00BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 446
00BD         ?C0041:
                                           ; SOURCE LINE # 447
00BD         ?C0039:
                                           ; SOURCE LINE # 449
00BD 7B00              MOV     R3,#00H
00BF 7A00              MOV     R2,#00H
00C1 7900              MOV     R1,#00H
00C3 C003              PUSH    AR3
00C5 C002              PUSH    AR2
00C7 C001              PUSH    AR1
00C9 900000      R     MOV     DPTR,#rowData
00CC E0                MOVX    A,@DPTR
00CD FB                MOV     R3,A
00CE A3                INC     DPTR
00CF E0                MOVX    A,@DPTR
00D0 FA                MOV     R2,A
00D1 A3                INC     DPTR
00D2 E0                MOVX    A,@DPTR
00D3 F9                MOV     R1,A
00D4 D082              POP     DPL
00D6 D083              POP     DPH
00D8 D0E0              POP     ACC
00DA 6B                XRL     A,R3
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 25  

00DB 7008              JNZ     ?C0079
00DD E9                MOV     A,R1
00DE 6582              XRL     A,DPL
00E0 7003              JNZ     ?C0079
00E2 EA                MOV     A,R2
00E3 6583              XRL     A,DPH
00E5         ?C0079:
00E5 7006              JNZ     ?C0042
                                           ; SOURCE LINE # 450
                                           ; SOURCE LINE # 451
00E7 900000      R     MOV     DPTR,#status
00EA 7401              MOV     A,#01H
00EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 452
00ED         ?C0042:
                                           ; SOURCE LINE # 455
00ED 900000      R     MOV     DPTR,#status
00F0 E0                MOVX    A,@DPTR
00F1 FF                MOV     R7,A
00F2 EF                MOV     A,R7
00F3 6003              JZ      $ + 5H
00F5 020000      R     LJMP    ?C0043
                                           ; SOURCE LINE # 456
                                           ; SOURCE LINE # 457
00F8 120000      E     LCALL   CySpcLock
00FB EF                MOV     A,R7
00FC 6003              JZ      $ + 5H
00FE 020000      R     LJMP    ?C0044
                                           ; SOURCE LINE # 458
                                           ; SOURCE LINE # 460
0101 900000      R     MOV     DPTR,#arrayId
0104 E0                MOVX    A,@DPTR
0105 FF                MOV     R7,A
0106 C007              PUSH    AR7
0108 900000      R     MOV     DPTR,#rowNumber
010B E0                MOVX    A,@DPTR
010C FC                MOV     R4,A
010D A3                INC     DPTR
010E E0                MOVX    A,@DPTR
010F FD                MOV     R5,A
0110 900000      R     MOV     DPTR,#rowData
0113 E0                MOVX    A,@DPTR
0114 FB                MOV     R3,A
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 FA                MOV     R2,A
0118 A3                INC     DPTR
0119 E0                MOVX    A,@DPTR
011A F9                MOV     R1,A
011B 900000      R     MOV     DPTR,#rowSize
011E E0                MOVX    A,@DPTR
011F FE                MOV     R6,A
0120 A3                INC     DPTR
0121 E0                MOVX    A,@DPTR
0122 FF                MOV     R7,A
0123 900000      E     MOV     DPTR,#?_CySpcLoadRowFull?BYTE+06H
0126 EE                MOV     A,R6
0127 F0                MOVX    @DPTR,A
0128 A3                INC     DPTR
0129 EF                MOV     A,R7
012A F0                MOVX    @DPTR,A
012B D007              POP     AR7
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 26  

012D 120000      E     LCALL   _CySpcLoadRowFull
0130 900000      R     MOV     DPTR,#status
0133 EF                MOV     A,R7
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 462
0135 900000      R     MOV     DPTR,#status
0138 E0                MOVX    A,@DPTR
0139 FF                MOV     R7,A
013A EF                MOV     A,R7
013B 6407              XRL     A,#07H
013D 6003              JZ      $ + 5H
013F 020000      R     LJMP    ?C0045
                                           ; SOURCE LINE # 463
0142         ?C0046:
                                           ; SOURCE LINE # 464
0142 904722            MOV     DPTR,#04722H
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
0147 EF                MOV     A,R7
0148 5402              ANL     A,#02H
014A FF                MOV     R7,A
014B 7E00              MOV     R6,#00H
014D EF                MOV     A,R7
014E 4E                ORL     A,R6
014F 7009              JNZ     ?C0047
                                           ; SOURCE LINE # 465
                                           ; SOURCE LINE # 467
0151 7F01              MOV     R7,#01H
0153 7E00              MOV     R6,#00H
0155 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 468
0158 80E8              SJMP    ?C0046
015A         ?C0047:
                                           ; SOURCE LINE # 471
015A 904722            MOV     DPTR,#04722H
015D E0                MOVX    A,@DPTR
015E FF                MOV     R7,A
015F EF                MOV     A,R7
0160 5402              ANL     A,#02H
0162 FF                MOV     R7,A
0163 7E00              MOV     R6,#00H
0165 EF                MOV     A,R7
0166 4E                ORL     A,R6
0167 600D              JZ      ?C0049
0169 904722            MOV     DPTR,#04722H
016C E0                MOVX    A,@DPTR
016D FF                MOV     R7,A
016E EF                MOV     A,R7
016F 13                RRC     A
0170 13                RRC     A
0171 543F              ANL     A,#03FH
0173 FF                MOV     R7,A
0174 8002              SJMP    ?C0050
0176         ?C0049:
0176 7FFF              MOV     R7,#0FFH
0178         ?C0050:
0178 EF                MOV     A,R7
0179 7007              JNZ     ?C0048
                                           ; SOURCE LINE # 472
                                           ; SOURCE LINE # 473
017B 900000      R     MOV     DPTR,#status
017E E4                CLR     A
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 27  

017F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 474
0180 8006              SJMP    ?C0051
0182         ?C0048:
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 477
0182 900000      R     MOV     DPTR,#status
0185 74FF              MOV     A,#0FFH
0187 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 478
0188         ?C0051:
                                           ; SOURCE LINE # 480
0188 900000      R     MOV     DPTR,#status
018B E0                MOVX    A,@DPTR
018C FF                MOV     R7,A
018D EF                MOV     A,R7
018E 7074              JNZ     ?C0045
                                           ; SOURCE LINE # 481
                                           ; SOURCE LINE # 483
0190 900000      R     MOV     DPTR,#arrayId
0193 E0                MOVX    A,@DPTR
0194 FF                MOV     R7,A
0195 900000      R     MOV     DPTR,#rowNumber
0198 E0                MOVX    A,@DPTR
0199 FC                MOV     R4,A
019A A3                INC     DPTR
019B E0                MOVX    A,@DPTR
019C FD                MOV     R5,A
019D 900000      R     MOV     DPTR,#dieTemperature
01A0 E0                MOVX    A,@DPTR
01A1 FB                MOV     R3,A
01A2 900000      R     MOV     DPTR,#dieTemperature+01H
01A5 E0                MOVX    A,@DPTR
01A6 FE                MOV     R6,A
01A7 900000      E     MOV     DPTR,#?_CySpcWriteRow?BYTE+04H
01AA EE                MOV     A,R6
01AB F0                MOVX    @DPTR,A
01AC 120000      E     LCALL   _CySpcWriteRow
01AF 900000      R     MOV     DPTR,#status
01B2 EF                MOV     A,R7
01B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 485
01B4 900000      R     MOV     DPTR,#status
01B7 E0                MOVX    A,@DPTR
01B8 FF                MOV     R7,A
01B9 EF                MOV     A,R7
01BA 6407              XRL     A,#07H
01BC 7046              JNZ     ?C0045
                                           ; SOURCE LINE # 486
01BE         ?C0054:
                                           ; SOURCE LINE # 487
01BE 904722            MOV     DPTR,#04722H
01C1 E0                MOVX    A,@DPTR
01C2 FF                MOV     R7,A
01C3 EF                MOV     A,R7
01C4 5402              ANL     A,#02H
01C6 FF                MOV     R7,A
01C7 7E00              MOV     R6,#00H
01C9 EF                MOV     A,R7
01CA 4E                ORL     A,R6
01CB 7009              JNZ     ?C0055
                                           ; SOURCE LINE # 488
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 28  

                                           ; SOURCE LINE # 490
01CD 7F01              MOV     R7,#01H
01CF 7E00              MOV     R6,#00H
01D1 120000      E     LCALL   _CyDelayUs
                                           ; SOURCE LINE # 491
01D4 80E8              SJMP    ?C0054
01D6         ?C0055:
                                           ; SOURCE LINE # 494
01D6 904722            MOV     DPTR,#04722H
01D9 E0                MOVX    A,@DPTR
01DA FF                MOV     R7,A
01DB EF                MOV     A,R7
01DC 5402              ANL     A,#02H
01DE FF                MOV     R7,A
01DF 7E00              MOV     R6,#00H
01E1 EF                MOV     A,R7
01E2 4E                ORL     A,R6
01E3 600D              JZ      ?C0057
01E5 904722            MOV     DPTR,#04722H
01E8 E0                MOVX    A,@DPTR
01E9 FF                MOV     R7,A
01EA EF                MOV     A,R7
01EB 13                RRC     A
01EC 13                RRC     A
01ED 543F              ANL     A,#03FH
01EF FF                MOV     R7,A
01F0 8002              SJMP    ?C0058
01F2         ?C0057:
01F2 7FFF              MOV     R7,#0FFH
01F4         ?C0058:
01F4 EF                MOV     A,R7
01F5 7007              JNZ     ?C0056
                                           ; SOURCE LINE # 495
                                           ; SOURCE LINE # 496
01F7 900000      R     MOV     DPTR,#status
01FA E4                CLR     A
01FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 497
01FC 8006              SJMP    ?C0045
01FE         ?C0056:
                                           ; SOURCE LINE # 499
                                           ; SOURCE LINE # 500
01FE 900000      R     MOV     DPTR,#status
0201 74FF              MOV     A,#0FFH
0203 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 501
0204         ?C0059:
                                           ; SOURCE LINE # 502
0204         ?C0053:
                                           ; SOURCE LINE # 503
0204         ?C0052:
                                           ; SOURCE LINE # 504
0204         ?C0045:
                                           ; SOURCE LINE # 505
0204 120000      E     LCALL   CySpcUnlock
                                           ; SOURCE LINE # 506
0207 8006              SJMP    ?C0043
0209         ?C0044:
                                           ; SOURCE LINE # 508
                                           ; SOURCE LINE # 509
0209 900000      R     MOV     DPTR,#status
020C 7404              MOV     A,#04H
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 29  

020E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 510
020F         ?C0060:
                                           ; SOURCE LINE # 511
020F         ?C0043:
                                           ; SOURCE LINE # 513
020F 900000      R     MOV     DPTR,#status
0212 E0                MOVX    A,@DPTR
0213 FF                MOV     R7,A
                                           ; SOURCE LINE # 514
0214         ?C0061:
0214 22                RET     
             ; FUNCTION _CyWriteRowFull (END)

             ; FUNCTION _CyFlash_SetWaitCycles (BEGIN)
                                           ; SOURCE LINE # 530
0000 900000      R     MOV     DPTR,#freq
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 535
0005 120000      E     LCALL   CyEnterCriticalSection
0008 900000      R     MOV     DPTR,#interruptState
000B EF                MOV     A,R7
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 543
000D 900000      R     MOV     DPTR,#freq
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 EF                MOV     A,R7
0013 C3                CLR     C
0014 9416              SUBB    A,#016H
0016 5014              JNC     ?C0062
                                           ; SOURCE LINE # 544
                                           ; SOURCE LINE # 545
0018 904800            MOV     DPTR,#04800H
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E 543F              ANL     A,#03FH
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 4440              ORL     A,#040H
0024 FF                MOV     R7,A
0025 904800            MOV     DPTR,#04800H
0028 EF                MOV     A,R7
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 547
002A 8043              SJMP    ?C0063
002C         ?C0062:
                                           ; SOURCE LINE # 548
002C 900000      R     MOV     DPTR,#freq
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 C3                CLR     C
0033 942C              SUBB    A,#02CH
0035 5014              JNC     ?C0064
                                           ; SOURCE LINE # 549
                                           ; SOURCE LINE # 550
0037 904800            MOV     DPTR,#04800H
003A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 30  

003B FF                MOV     R7,A
003C EF                MOV     A,R7
003D 543F              ANL     A,#03FH
003F FF                MOV     R7,A
0040 EF                MOV     A,R7
0041 4480              ORL     A,#080H
0043 FF                MOV     R7,A
0044 904800            MOV     DPTR,#04800H
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 552
0049 8024              SJMP    ?C0063
004B         ?C0064:
                                           ; SOURCE LINE # 553
004B 900000      R     MOV     DPTR,#freq
004E E0                MOVX    A,@DPTR
004F FF                MOV     R7,A
0050 EF                MOV     A,R7
0051 C3                CLR     C
0052 9443              SUBB    A,#043H
0054 5014              JNC     ?C0066
                                           ; SOURCE LINE # 554
                                           ; SOURCE LINE # 555
0056 904800            MOV     DPTR,#04800H
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B EF                MOV     A,R7
005C 543F              ANL     A,#03FH
005E FF                MOV     R7,A
005F EF                MOV     A,R7
0060 44C0              ORL     A,#0C0H
0062 FF                MOV     R7,A
0063 904800            MOV     DPTR,#04800H
0066 EF                MOV     A,R7
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 557
0068 8005              SJMP    ?C0063
006A         ?C0066:
                                           ; SOURCE LINE # 571
                                           ; SOURCE LINE # 573
006A 7F00              MOV     R7,#00H
006C 120000      E     LCALL   _?CyHalt
006F         ?C0068:
                                           ; SOURCE LINE # 574
006F         ?C0067:
006F         ?C0065:
006F         ?C0063:
                                           ; SOURCE LINE # 577
006F 900000      R     MOV     DPTR,#interruptState
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 578
0077         ?C0069:
0077 22                RET     
             ; FUNCTION _CyFlash_SetWaitCycles (END)

             ; FUNCTION CyEEPROM_Start (BEGIN)
                                           ; SOURCE LINE # 588
                                           ; SOURCE LINE # 589
                                           ; SOURCE LINE # 592
0000 120000      E     LCALL   CyEnterCriticalSection
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 31  

0003 900000      R     MOV     DPTR,#interruptState
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 599
0008 9043A0            MOV     DPTR,#043A0H
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 4408              ORL     A,#08H
0010 FF                MOV     R7,A
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 600
0013 9043B0            MOV     DPTR,#043B0H
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 4408              ORL     A,#08H
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 613
001E 904701            MOV     DPTR,#04701H
0021 74C8              MOV     A,#0C8H
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 620
0024 9043AC            MOV     DPTR,#043ACH
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 4410              ORL     A,#010H
002C FF                MOV     R7,A
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 621
002F 9043BC            MOV     DPTR,#043BCH
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 4410              ORL     A,#010H
0037 FF                MOV     R7,A
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
003A         ?C0070:
                                           ; SOURCE LINE # 623
003A 904700            MOV     DPTR,#04700H
003D E0                MOVX    A,@DPTR
003E FF                MOV     R7,A
003F EF                MOV     A,R7
0040 5420              ANL     A,#020H
0042 FF                MOV     R7,A
0043 7E00              MOV     R6,#00H
0045 EF                MOV     A,R7
0046 4E                ORL     A,R6
0047 60F1              JZ      ?C0070
                                           ; SOURCE LINE # 624
                                           ; SOURCE LINE # 626
0049         ?C0071:
                                           ; SOURCE LINE # 628
0049 900000      R     MOV     DPTR,#interruptState
004C E0                MOVX    A,@DPTR
004D FF                MOV     R7,A
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 32  

004E 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 629
0051         ?C0072:
0051 22                RET     
             ; FUNCTION CyEEPROM_Start (END)

             ; FUNCTION CyEEPROM_Stop (BEGIN)
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 640
                                           ; SOURCE LINE # 643
0000 120000      E     LCALL   CyEnterCriticalSection
0003 900000      R     MOV     DPTR,#interruptState
0006 EF                MOV     A,R7
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
0008 9043AC            MOV     DPTR,#043ACH
000B E0                MOVX    A,@DPTR
000C FF                MOV     R7,A
000D EF                MOV     A,R7
000E 54EF              ANL     A,#0EFH
0010 FF                MOV     R7,A
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 646
0013 9043BC            MOV     DPTR,#043BCH
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 54EF              ANL     A,#0EFH
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 648
001E 900000      R     MOV     DPTR,#interruptState
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 120000      E     LCALL   _CyExitCriticalSection
                                           ; SOURCE LINE # 649
0026         ?C0073:
0026 22                RET     
             ; FUNCTION CyEEPROM_Stop (END)

             ; FUNCTION CyEEPROM_ReadReserve (BEGIN)
                                           ; SOURCE LINE # 659
                                           ; SOURCE LINE # 660
                                           ; SOURCE LINE # 662
0000 904702            MOV     DPTR,#04702H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 4401              ORL     A,#01H
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
000B         ?C0074:
                                           ; SOURCE LINE # 664
000B 904702            MOV     DPTR,#04702H
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 5402              ANL     A,#02H
0013 FF                MOV     R7,A
C51 COMPILER V9.51   CYFLASH                                                               11/18/2016 15:58:27 PAGE 33  

0014 7E00              MOV     R6,#00H
0016 EF                MOV     A,R7
0017 4E                ORL     A,R6
0018 60F1              JZ      ?C0074
                                           ; SOURCE LINE # 665
                                           ; SOURCE LINE # 667
001A         ?C0075:
                                           ; SOURCE LINE # 668
001A         ?C0076:
001A 22                RET     
             ; FUNCTION CyEEPROM_ReadReserve (END)

             ; FUNCTION CyEEPROM_ReadRelease (BEGIN)
                                           ; SOURCE LINE # 678
                                           ; SOURCE LINE # 679
                                           ; SOURCE LINE # 680
0000 904702            MOV     DPTR,#04702H
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 54FE              ANL     A,#0FEH
0008 FF                MOV     R7,A
0009 EF                MOV     A,R7
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 681
000B         ?C0077:
000B 22                RET     
             ; FUNCTION CyEEPROM_ReadRelease (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1442    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     36    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
