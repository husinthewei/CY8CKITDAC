C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) 
                    -PR(.\DP8051_Keil_951\Debug/cyfitter_cfg.lst) CD OT(0,SPEED) OJ(.\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: cyfitter_cfg.c
   3          * 
   4          * PSoC Creator  4.0
   5          *
   6          * Description:
   7          * This file contains device initialization code.
   8          * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
   9          * This file is automatically generated by PSoC Creator.
  10          *
  11          ********************************************************************************
  12          * Copyright (c) 2007-2016 Cypress Semiconductor.  All rights reserved.
  13          * You may use this file only in accordance with the license, terms, conditions, 
  14          * disclaimers, and limitations in the end user license agreement accompanying 
  15          * the software package with which this file was provided.
  16          ********************************************************************************/
  17          
  18          #include <string.h>
  19          #include "cytypes.h"
  20          #include "cydevice_trm.h"
  21          #include "cyfitter.h"
  22          #include "CyLib.h"
  23          #include "cyfitter_cfg.h"
  24          #include "cyapicallbacks.h"
  25          
  26          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  27          
  28          
  29          #if defined(__C51__) || defined(__CX51__)
  30                  #define CYPACKED
  31                  #define CYPACKED_ATTR
  32                  #define CYALIGNED
  33                  
  34              #define CY_CFG_UNUSED
  35                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  36          
  37          
  38          
  39                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  40                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  41                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  42          #else
                      #error Unsupported toolchain
              #endif
  45          
  46          
  47          
  48          
  49          /* Clock startup error codes                                                   */
  50          #define CYCLOCKSTART_NO_ERROR    0u
  51          #define CYCLOCKSTART_XTAL_ERROR  1u
  52          #define CYCLOCKSTART_32KHZ_ERROR 2u
  53          #define CYCLOCKSTART_PLL_ERROR   3u
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 2   

  54          
  55          
  56          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  57          /*******************************************************************************
  58          * Function Name: CyClockStartupError
  59          ********************************************************************************
  60          * Summary:
  61          *  If an error is encountered during clock configuration (crystal startup error,
  62          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  63          *  the customer, this function will stop in an infinite loop.
  64          *
  65          * Parameters:
  66          *   void
  67          *
  68          * Return:
  69          *   void
  70          *
  71          *******************************************************************************/
  72          CY_CFG_UNUSED
  73          static void CyClockStartupError(uint8 errorCode);
  74          CY_CFG_UNUSED
  75          static void CyClockStartupError(uint8 errorCode)
  76          {
  77   1          /* To remove the compiler warning if errorCode not used.                */
  78   1          errorCode = errorCode;
  79   1      
  80   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  81   1          /* we will end up here to allow the customer to implement something to  */
  82   1          /* deal with the clock condition.                                       */
  83   1      
  84   1      #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
                      CY_CFG_Clock_Startup_ErrorCallback();
              #else
  87   1              /*  If not using CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK, place your clock startup code here. */
  88   1          /* `#START CyClockStartupError` */
  89   1      
  90   1      
  91   1      
  92   1          /* `#END` */
  93   1      
  94   1          /* If nothing else, stop here since the clocks have not started         */
  95   1          /* correctly.                                                           */
  96   1          while(1) {}
  97   1      #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */ 
  98   1      }
  99          #endif
 100          
 101          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
 102          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080000u)
 103          
 104          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 105          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x00080008u)
 106          
 107          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 108          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x00080010u)
 109          
 110          
 111          /*******************************************************************************
 112          * Function Name: ClockSetup
 113          ********************************************************************************
 114          *
 115          * Summary:
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 3   

 116          *  Performs the initialization of all of the clocks in the device based on the
 117          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 118          *  clocks and setting the necessary dividers to produce the desired frequency. 
 119          *
 120          * Parameters:
 121          *  void
 122          *
 123          * Return:
 124          *  void
 125          *
 126          *******************************************************************************/
 127          static void ClockSetup(void);
 128          static void ClockSetup(void)
 129          {
 130   1              uint32 timeout;
 131   1              uint8 pllLock;
 132   1      
 133   1      
 134   1              /* Configure ILO based on settings from Clock DWR */
 135   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 136   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 137   1      
 138   1              /* Configure IMO based on settings from Clock DWR */
 139   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 140   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 141   1      
 142   1              /* Configure PLL based on settings from Clock DWR */
 143   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 144   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 145   1              /* Wait up to 250us for the PLL to lock */
 146   1              pllLock = 0u;
 147   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 148   1              { 
 149   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 150   2                      CyDelayCycles(10u * 12u); /* Delay 10us based on 12MHz clock */
 151   2              }
 152   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 153   1              if (timeout == 0u)
 154   1              {
 155   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 156   2              }
 157   1      
 158   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 159   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 160   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 163   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 164   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 165   1      }
 166          
 167          
 168          /* Analog API Functions */
 169          
 170          
 171          /*******************************************************************************
 172          * Function Name: AnalogSetDefault
 173          ********************************************************************************
 174          *
 175          * Summary:
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 4   

 176          *  Sets up the analog portions of the chip to default values based on chip
 177          *  configuration options from the project.
 178          *
 179          * Parameters:
 180          *  void
 181          *
 182          * Return:
 183          *  void
 184          *
 185          *******************************************************************************/
 186          static void AnalogSetDefault(void);
 187          static void AnalogSetDefault(void)
 188          {
 189   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 190   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 191   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 192   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AG, 0x10u);
 193   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC2_SW0, 0x10u);
 194   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 195   1      }
 196          
 197          
 198          /*******************************************************************************
 199          * Function Name: SetAnalogRoutingPumps
 200          ********************************************************************************
 201          *
 202          * Summary:
 203          * Enables or disables the analog pumps feeding analog routing switches.
 204          * Intended to be called at startup, based on the Vdda system configuration;
 205          * may be called during operation when the user informs us that the Vdda voltage
 206          * crossed the pump threshold.
 207          *
 208          * Parameters:
 209          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 210          *
 211          * Return:
 212          *  void
 213          *
 214          *******************************************************************************/
 215          void SetAnalogRoutingPumps(uint8 enabled)
 216          {
 217   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 218   1              if (enabled != 0u)
 219   1              {
 220   2                      regValue |= 0x22u;
 221   2              }
 222   1              else
 223   1              {
 224   2                      regValue &= (uint8)~0x22u;
 225   2              }
 226   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 227   1      }
 228          
 229          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 230          
 231          
 232          /*******************************************************************************
 233          * Function Name: cyfitter_cfg
 234          ********************************************************************************
 235          * Summary:
 236          *  This function is called by the start-up code for the selected device. It
 237          *  performs all of the necessary device configuration based on the design
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 5   

 238          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 239          *  as Clocks and Pins as well as any component configuration that is necessary.
 240          *
 241          * Parameters:  
 242          *   void
 243          *
 244          * Return:
 245          *   void
 246          *
 247          *******************************************************************************/
 248          
 249          void cyfitter_cfg(void)
 250          {
 251   1      
 252   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 253   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 254   1              /* Setup clocks based on selections from Clock DWR */
 255   1              ClockSetup();
 256   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 257   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 258   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 259   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 260   1      
 261   1              {
 262   2      
 263   2                      CYPACKED typedef struct {
 264   2                              void CYFAR *address;
 265   2                              uint16 size;
 266   2                      } CYPACKED_ATTR cfg_memset_t;
 267   2      
 268   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 269   2                              /* address, size */
 270   2                              {(void CYFAR *)(CYREG_PRT3_DR), 64u},
 271   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 272   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 273   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 274   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 275   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 276   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 277   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 278   2                      };
 279   2      
 280   2                      uint8 CYDATA i;
 281   2      
 282   2                      /* Zero out critical memory blocks before beginning configuration */
 283   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 284   2                      {
 285   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 286   3                              CYMEMZERO(ms->address, ms->size);
 287   3                      }
 288   2      
 289   2                      /* Enable digital routing */
 290   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 291   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 292   2      
 293   2                      /* Enable UDB array */
 294   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 295   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 6   

 296   2              }
 297   1      
 298   1      
 299   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 300   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 301   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (const void CYFAR *)(BS_IOPINS0_1_VAL), 8u);
 302   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 303   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 304   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 305   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 306   1              {
 307   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 308   2              }
 309   1      
 310   1      
 311   1              /* Perform basic analog initialization to defaults */
 312   1              AnalogSetDefault();
 313   1      
 314   1              /* Configure alternate active mode */
 315   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 316   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 317   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 75
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 78
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 96
000F 80FE              SJMP    ?C0001
0011         ?C0002:
                                           ; SOURCE LINE # 98
0011         ?C0003:
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 135
0000 904300            MOV     DPTR,#04300H
0003 7402              MOV     A,#02H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 136
0006 904000            MOV     DPTR,#04000H
0009 7408              MOV     A,#08H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
000C 904200            MOV     DPTR,#04200H
000F 7403              MOV     A,#03H
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
0012 7B0C              MOV     R3,#0CH
0014 7A01              MOV     R2,#01H
0016 7908              MOV     R1,#08H
0018 120000      E     LCALL   _cyread8
001B 9046A1            MOV     DPTR,#046A1H
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 143
0020 7B00              MOV     R3,#00H
0022 7A42              MOV     R2,#042H
0024 7922              MOV     R1,#022H
0026 7D08              MOV     R5,#08H
0028 7C00              MOV     R4,#00H
002A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 144
002D 7B00              MOV     R3,#00H
002F 7A42              MOV     R2,#042H
0031 7920              MOV     R1,#020H
0033 7D51              MOV     R5,#051H
0035 7C12              MOV     R4,#012H
0037 120000      E     LCALL   _cywrite16
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 8   

                                           ; SOURCE LINE # 146
003A 900000      R     MOV     DPTR,#pllLock
003D E4                CLR     A
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
003F 7F19              MOV     R7,#019H
0041 7E00              MOV     R6,#00H
0043 7D00              MOV     R5,#00H
0045 7C00              MOV     R4,#00H
0047 900000      R     MOV     DPTR,#timeout
004A 120000      E     LCALL   ?C?LSTXDATA
004D         ?C0004:
004D 900000      R     MOV     DPTR,#timeout
0050 E0                MOVX    A,@DPTR
0051 FC                MOV     R4,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FD                MOV     R5,A
0055 A3                INC     DPTR
0056 E0                MOVX    A,@DPTR
0057 FE                MOV     R6,A
0058 A3                INC     DPTR
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B D3                SETB    C
005C EF                MOV     A,R7
005D 9400              SUBB    A,#00H
005F EE                MOV     A,R6
0060 9400              SUBB    A,#00H
0062 405F              JC      ?C0005
0064 900000      R     MOV     DPTR,#pllLock
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 EF                MOV     A,R7
006A 6403              XRL     A,#03H
006C 6055              JZ      ?C0005
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
006E 904225            MOV     DPTR,#04225H
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 5401              ANL     A,#01H
0076 FF                MOV     R7,A
0077 7E00              MOV     R6,#00H
0079 900000      R     MOV     DPTR,#pllLock
007C E0                MOVX    A,@DPTR
007D FE                MOV     R6,A
007E EE                MOV     A,R6
007F 25E0              ADD     A,ACC
0081 FE                MOV     R6,A
0082 EE                MOV     A,R6
0083 4F                ORL     A,R7
0084 FF                MOV     R7,A
0085 EF                MOV     A,R7
0086 5403              ANL     A,#03H
0088 FF                MOV     R7,A
0089 900000      R     MOV     DPTR,#pllLock
008C EF                MOV     A,R7
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
008E 7F78              MOV     R7,#078H
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 9   

0090 7E00              MOV     R6,#00H
0092 7D00              MOV     R5,#00H
0094 7C00              MOV     R4,#00H
0096 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 151
0099         ?C0006:
0099 900000      R     MOV     DPTR,#timeout
009C E0                MOVX    A,@DPTR
009D FC                MOV     R4,A
009E A3                INC     DPTR
009F E0                MOVX    A,@DPTR
00A0 FD                MOV     R5,A
00A1 A3                INC     DPTR
00A2 E0                MOVX    A,@DPTR
00A3 FE                MOV     R6,A
00A4 A3                INC     DPTR
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 7BFF              MOV     R3,#0FFH
00A9 7AFF              MOV     R2,#0FFH
00AB 79FF              MOV     R1,#0FFH
00AD 78FF              MOV     R0,#0FFH
00AF EF                MOV     A,R7
00B0 2B                ADD     A,R3
00B1 FF                MOV     R7,A
00B2 EE                MOV     A,R6
00B3 3A                ADDC    A,R2
00B4 FE                MOV     R6,A
00B5 ED                MOV     A,R5
00B6 39                ADDC    A,R1
00B7 FD                MOV     R5,A
00B8 EC                MOV     A,R4
00B9 38                ADDC    A,R0
00BA FC                MOV     R4,A
00BB 900000      R     MOV     DPTR,#timeout
00BE 120000      E     LCALL   ?C?LSTXDATA
00C1 808A              SJMP    ?C0004
00C3         ?C0005:
                                           ; SOURCE LINE # 153
00C3 900000      R     MOV     DPTR,#timeout
00C6 E0                MOVX    A,@DPTR
00C7 FC                MOV     R4,A
00C8 A3                INC     DPTR
00C9 E0                MOVX    A,@DPTR
00CA FD                MOV     R5,A
00CB A3                INC     DPTR
00CC E0                MOVX    A,@DPTR
00CD FE                MOV     R6,A
00CE A3                INC     DPTR
00CF E0                MOVX    A,@DPTR
00D0 FF                MOV     R7,A
00D1 EF                MOV     A,R7
00D2 4E                ORL     A,R6
00D3 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 155
00D5 7F03              MOV     R7,#03H
00D7 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 156
00DA         ?C0007:
                                           ; SOURCE LINE # 159
00DA 7B00              MOV     R3,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 10  

00DC 7A40              MOV     R2,#040H
00DE 7904              MOV     R1,#04H
00E0 7D00              MOV     R5,#00H
00E2 7C01              MOV     R4,#01H
00E4 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 160
00E7 904004            MOV     DPTR,#04004H
00EA 7407              MOV     A,#07H
00EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
00ED 904006            MOV     DPTR,#04006H
00F0 E4                CLR     A
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
00F2 904008            MOV     DPTR,#04008H
00F5 7448              MOV     A,#048H
00F7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
00F8 904004            MOV     DPTR,#04004H
00FB E4                CLR     A
00FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
00FD 904001            MOV     DPTR,#04001H
0100 7402              MOV     A,#02H
0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
0103         ?C0008:
0103 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 11  

002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
002F 90510D            MOV     DPTR,#0510DH
0032 7410              MOV     A,#010H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
0035 905A90            MOV     DPTR,#05A90H
0038 7410              MOV     A,#010H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
003B 905876            MOV     DPTR,#05876H
003E 7444              MOV     A,#044H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
0041         ?C0009:
0041 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 215
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 218
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4422              ORL     A,#022H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54DD              ANL     A,#0DDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 12  

0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
0035         ?C0011:
                                           ; SOURCE LINE # 226
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
003F         ?C0012:
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 253
0000 904800            MOV     DPTR,#04800H
0003 74C0              MOV     A,#0C0H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 255
0006 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 257
0009 904800            MOV     DPTR,#04800H
000C 7480              MOV     A,#080H
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 259
000F 7B00              MOV     R3,#00H
0011 7A46              MOV     R2,#046H
0013 79E8              MOV     R1,#0E8H
0015 120000      E     LCALL   _cyread8
0018 EF                MOV     A,R7
0019 4405              ORL     A,#05H
001B FD                MOV     R5,A
001C 7B00              MOV     R3,#00H
001E 7A46              MOV     R2,#046H
0020 79E8              MOV     R1,#0E8H
0022 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 283
0025 750000      R     MOV     i,#00H
0028         ?C0013:
0028 E500        R     MOV     A,i
002A C3                CLR     C
002B 9408              SUBB    A,#08H
002D 5042              JNC     ?C0014
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 285
002F AF00        R     MOV     R7,i
0031 EF                MOV     A,R7
0032 75F005            MOV     B,#05H
0035 A4                MUL     AB
0036 2400        R     ADD     A,#LOW cfg_memset_list
0038 F582              MOV     DPL,A
003A E4                CLR     A
003B 3400        R     ADDC    A,#HIGH cfg_memset_list
003D F583              MOV     DPH,A
003F AF82              MOV     R7,DPL
0041 AE83              MOV     R6,DPH
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 13  

0043 8E00        R     MOV     ms,R6
0045 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 286
0047 AE00        R     MOV     R6,ms
0049 AF00        R     MOV     R7,ms+01H
004B 8F82              MOV     DPL,R7
004D 8E83              MOV     DPH,R6
004F E4                CLR     A
0050 93                MOVC    A,@A+DPTR
0051 FB                MOV     R3,A
0052 7401              MOV     A,#01H
0054 93                MOVC    A,@A+DPTR
0055 FA                MOV     R2,A
0056 7402              MOV     A,#02H
0058 93                MOVC    A,@A+DPTR
0059 F9                MOV     R1,A
005A AE00        R     MOV     R6,ms
005C AF00        R     MOV     R7,ms+01H
005E 8F82              MOV     DPL,R7
0060 8E83              MOV     DPH,R6
0062 7403              MOV     A,#03H
0064 93                MOVC    A,@A+DPTR
0065 FC                MOV     R4,A
0066 7404              MOV     A,#04H
0068 93                MOVC    A,@A+DPTR
0069 FD                MOV     R5,A
006A 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 287
006D         ?C0015:
006D 0500        R     INC     i
006F 80B7              SJMP    ?C0013
0071         ?C0014:
                                           ; SOURCE LINE # 290
0071 7B01              MOV     R3,#01H
0073 7A50              MOV     R2,#050H
0075 7903              MOV     R1,#03H
0077 120000      E     LCALL   _cyread8
007A EF                MOV     A,R7
007B 4402              ORL     A,#02H
007D FD                MOV     R5,A
007E 7B01              MOV     R3,#01H
0080 7A50              MOV     R2,#050H
0082 7903              MOV     R1,#03H
0084 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 291
0087 7B01              MOV     R3,#01H
0089 7A50              MOV     R2,#050H
008B 7913              MOV     R1,#013H
008D 120000      E     LCALL   _cyread8
0090 EF                MOV     A,R7
0091 4402              ORL     A,#02H
0093 FD                MOV     R5,A
0094 7B01              MOV     R3,#01H
0096 7A50              MOV     R2,#050H
0098 7913              MOV     R1,#013H
009A 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 294
009D 9043A0            MOV     DPTR,#043A0H
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 EF                MOV     A,R7
00A3 4440              ORL     A,#040H
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 14  

00A5 FF                MOV     R7,A
00A6 9043A0            MOV     DPTR,#043A0H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
00AB 9043C2            MOV     DPTR,#043C2H
00AE E0                MOVX    A,@DPTR
00AF FF                MOV     R7,A
00B0 EF                MOV     A,R7
00B1 4410              ORL     A,#010H
00B3 FF                MOV     R7,A
00B4 9043C2            MOV     DPTR,#043C2H
00B7 EF                MOV     A,R7
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 300
00B9 7B08              MOV     R3,#08H
00BB 7A00              MOV     R2,#00H
00BD 7900              MOV     R1,#00H
00BF C003              PUSH    AR3
00C1 C002              PUSH    AR2
00C3 C001              PUSH    AR1
00C5 7B00              MOV     R3,#00H
00C7 7A51              MOV     R2,#051H
00C9 7902              MOV     R1,#02H
00CB 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00CE EB                MOV     A,R3
00CF F0                MOVX    @DPTR,A
00D0 A3                INC     DPTR
00D1 EA                MOV     A,R2
00D2 F0                MOVX    @DPTR,A
00D3 A3                INC     DPTR
00D4 E9                MOV     A,R1
00D5 F0                MOVX    @DPTR,A
00D6 D001              POP     AR1
00D8 D002              POP     AR2
00DA D003              POP     AR3
00DC 7F08              MOV     R7,#08H
00DE 7E00              MOV     R6,#00H
00E0 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 301
00E3 7B08              MOV     R3,#08H
00E5 7A00              MOV     R2,#00H
00E7 7908              MOV     R1,#08H
00E9 C003              PUSH    AR3
00EB C002              PUSH    AR2
00ED C001              PUSH    AR1
00EF 7B00              MOV     R3,#00H
00F1 7A51              MOV     R2,#051H
00F3 7912              MOV     R1,#012H
00F5 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00F8 EB                MOV     A,R3
00F9 F0                MOVX    @DPTR,A
00FA A3                INC     DPTR
00FB EA                MOV     A,R2
00FC F0                MOVX    @DPTR,A
00FD A3                INC     DPTR
00FE E9                MOV     A,R1
00FF F0                MOVX    @DPTR,A
0100 D001              POP     AR1
0102 D002              POP     AR2
0104 D003              POP     AR3
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 15  

0106 7F08              MOV     R7,#08H
0108 7E00              MOV     R6,#00H
010A 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 302
010D 7B08              MOV     R3,#08H
010F 7A00              MOV     R2,#00H
0111 7910              MOV     R1,#010H
0113 C003              PUSH    AR3
0115 C002              PUSH    AR2
0117 C001              PUSH    AR1
0119 7B00              MOV     R3,#00H
011B 7A51              MOV     R2,#051H
011D 7922              MOV     R1,#022H
011F 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0122 EB                MOV     A,R3
0123 F0                MOVX    @DPTR,A
0124 A3                INC     DPTR
0125 EA                MOV     A,R2
0126 F0                MOVX    @DPTR,A
0127 A3                INC     DPTR
0128 E9                MOV     A,R1
0129 F0                MOVX    @DPTR,A
012A D001              POP     AR1
012C D002              POP     AR2
012E D003              POP     AR3
0130 7F08              MOV     R7,#08H
0132 7E00              MOV     R6,#00H
0134 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 304
0137 904322            MOV     DPTR,#04322H
013A E0                MOVX    A,@DPTR
013B FF                MOV     R7,A
013C EF                MOV     A,R7
013D 4408              ORL     A,#08H
013F FF                MOV     R7,A
0140 904322            MOV     DPTR,#04322H
0143 EF                MOV     A,R7
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 305
0145 9046EC            MOV     DPTR,#046ECH
0148 E0                MOVX    A,@DPTR
0149 FF                MOV     R7,A
014A EF                MOV     A,R7
014B C3                CLR     C
014C 9405              SUBB    A,#05H
014E 5006              JNC     ?C0016
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
0150 904689            MOV     DPTR,#04689H
0153 743A              MOV     A,#03AH
0155 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 308
0156         ?C0016:
                                           ; SOURCE LINE # 312
0156 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 315
0159 7B00              MOV     R3,#00H
015B 7A43              MOV     R2,#043H
015D 79A0              MOV     R1,#0A0H
015F C003              PUSH    AR3
0161 C002              PUSH    AR2
0163 C001              PUSH    AR1
C51 COMPILER V9.51   CYFITTER_CFG                                                          11/18/2016 15:58:27 PAGE 16  

0165 7B00              MOV     R3,#00H
0167 7A43              MOV     R2,#043H
0169 79B0              MOV     R1,#0B0H
016B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
016E EB                MOV     A,R3
016F F0                MOVX    @DPTR,A
0170 A3                INC     DPTR
0171 EA                MOV     A,R2
0172 F0                MOVX    @DPTR,A
0173 A3                INC     DPTR
0174 E9                MOV     A,R1
0175 F0                MOVX    @DPTR,A
0176 D001              POP     AR1
0178 D002              POP     AR2
017A D003              POP     AR3
017C 7F0E              MOV     R7,#0EH
017E 7E00              MOV     R6,#00H
0180 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 316
0183 9043B0            MOV     DPTR,#043B0H
0186 E0                MOVX    A,@DPTR
0187 FF                MOV     R7,A
0188 EF                MOV     A,R7
0189 54FD              ANL     A,#0FDH
018B FF                MOV     R7,A
018C EF                MOV     A,R7
018D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 317
018E         ?C0017:
018E 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    807    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =      9    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
